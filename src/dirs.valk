
use valk:fs

fn div() String {
    #if OS == win
    return "\\"
    #else
    return "/"
    #end
}

fn version_dir(version: String) String {
    return versions_dir() + version + div()
}

fn versions_dir() String {
    let dir = vman_dir() + "versions"
    if !fs:is_dir(dir) : fs:mkdir(dir) ! error("Failed to create directory: " + dir)
    return dir + div()
}

fn bin_dir() String {
    let dir = vman_dir() + "bin"
    if !fs:is_dir(dir) : fs:mkdir(dir) ! error("Failed to create directory: " + dir)
    return dir + div()
}

fn vman_dir() String {
    let home = fs:home_dir() !? "~"
    #if OS == win
    let dir = home + div() + "vman"
    #else
    let dir = home + div() + ".vman"
    #end
    if !fs:is_dir(dir) : fs:mkdir(dir) ! error("Failed to create directory: " + dir)
    return dir + div()
}

fn downloads_dir() String {
    let dir = vman_dir() + "downloads"
    if !fs:is_dir(dir) : fs:mkdir(dir) ! error("Failed to create directory: " + dir)
    return dir + div()
}

fn cache_dir() String {
    let dir = fs:add(vman_dir(), "cache")
    if !fs:is_dir(dir) : fs:mkdir(dir) ! error("Failed to create directory: " + dir)
    return dir
}
fn cache_repo_dir() String {
    let dir = fs:add(cache_dir(), "repos")
    if !fs:is_dir(dir) : fs:mkdir(dir) ! error("Failed to create directory: " + dir)
    return dir
}

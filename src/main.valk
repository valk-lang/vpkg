
use valk:core
use valk:ansi

fn emo(emo: String, alt: String) String {
    return ansi:supported() ? emo : alt
}

fn main(args: Array[String]) {

    let options = extract_options(args)

    args.remove_index(0)
    let action = args.get(0) ! help(0)
    args.remove_index(0)

    if action == "use" {
        cmd_use(args, options)
    } else if action == "self-update" {
        self_update()
    } else if action == "version" {
        println(#STR(VERSION))
    } else {
        println("Unknown action: '" + action + "'")
        exit(1)
    }
}

fn help(code: i32) $exit {

    println("------------------------------")
    println(" Valk Package Manager " + #STR(VERSION))
    println("------------------------------")

    // Packages
    print("\n")
    help_intro_pkg_commands()
    // Use
    print("\n")
    help_intro_use()
    // Toolchains
    print("\n")
    help_intro_toolchain()
    // Other
    print("\n")
    println(emo("⚙️", "#") + " vpkg commands");
    print("\n")
    println(" vpkg self-update     Update vpkg itself");
    println(" vpkg version         Show vpkg version");
    println(" vpkg {command} -h    Show help for a command");

    print("\n")

    exit(code)
}


fn extract_options(args: Array[String]) Array[String] {
    let options = array[String]{}
    each args as arg, i {
        if arg.starts_with("-") {
            options.push(arg)
            args.remove_index(i--)
        }
    }
    return options
}